<?php

/**
 * @file
 * AdTechMedia advertising module.
 */

/**
 * Implements hook_preprocess_HOOK().
 */
function atm_preprocess_node(&$variables) {
  if ($variables['view_mode'] == 'full') {
    $variables['attributes']['class'][] = 'atm--node--view-mode--full';

    array_unshift($variables['content']['body'], [
      '#markup' => '<div id="atm-modal-content"></div>',
    ]);
  }
}

/**
 * Implements hook_theme().
 */
function atm_theme($existing, $type, $theme, $path) {
  $items = [];

  $items['atm-admin-config-page'] = [
    'variables' => [
      'general_configuration' => NULL,
      'content_configuration' => NULL,
      'templates_management' => NULL,
    ],
    'template' => 'admin/config-page',
    'path' => $path . '/templates',
    'preprocess functions' => [
      'atm_admin_config_page_preprocess',
    ],
  ];

  $items['atm-pledge-template-preview'] = [
    'template' => 'admin/atm-pledge-template-preview',
    'path' => $path . '/templates',
    'render element' => 'elements',
  ];

  $items['atm-pay-template-preview'] = [
    'template' => 'admin/atm-pay-template-preview',
    'path' => $path . '/templates',
    'render element' => 'elements',
  ];

  $items['atm-refund-template-preview'] = [
    'template' => 'admin/atm-refund-template-preview',
    'path' => $path . '/templates',
    'render element' => 'elements',
  ];

  $items['atm-unlock-view-template-preview'] = [
    'template' => 'admin/atm-unlock-view-template-preview',
    'path' => $path . '/templates',
    'render element' => 'elements',
  ];

  $items['atm-price-view-template-preview'] = [
    'template' => 'admin/atm-price-view-template-preview',
    'path' => $path . '/templates',
    'render element' => 'elements',
  ];

  return $items;
}

/**
 * Attach atm/js in page.
 */
function atm_page_attachments(array &$attachments) {
  /** @var \Drupal\atm\Helper\AtmApiHelper $helper */
  $helper = \Drupal::service('atm.helper');

  $routName = \Drupal::routeMatch()->getRouteName();

  if ($routName == 'atm.config.page') {
    $attachments['#attached']['library'][] = 'atm/api.admin';

    $attachments['#attached']['html_head'][] = [
      [
        '#tag' => 'style',
        '#value' => $helper->getTemplateOwerallStyles(),
        '#attributes' => [
          'id' => 'overall-styling-and-position',
        ],
      ],
      'atm-styles',
    ];

    $attachments['#attached']['html_head'][] = [
      [
        '#tag' => 'style',
        '#value' => $helper->getCssTemplate(),
        '#attributes' => [
          'id' => 'overall-styling-and-position-template',
          'type' => 'template/css',
        ],
      ],
      'atm-styles-template',
    ];

  }

  if ($routName == 'entity.node.canonical') {
    /** @var \Drupal\node\Entity\Node $node */
    $node = \Drupal::routeMatch()->getParameter('node');

    if (in_array($node->getType(), $helper->getSelectedContentTypes())) {
      $atmApi = $helper->get('build_path') . '?' . microtime();

      $isSecure = ((!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off') || $_SERVER['SERVER_PORT'] == 443);
      if ($isSecure) {
        $atmApi = preg_replace("/^http/", 'https', $atmApi);
      }

      $script = "
        (function() {
      
          window.addEventListener('load', function() {
            var body = document.getElementsByTagName('body')[0];
            var js = document.createElement('script');
            js.setAttribute('type', 'text/javascript');
            js.setAttribute('src', '$atmApi');
            js.setAttribute('id', 'atm-js')
            body.appendChild(js);
          })
          
        })()
      ";

      $attachments['#attached']['html_head'][] = [
        [
          '#tag' => 'script',
          '#value' => "window.ATM_SERVICE_WORKER = '/sw-min-js'",
        ],
        'sw',
      ];

      $attachments['#attached']['html_head'][] = [
        [
          '#tag' => 'script',
          '#value' => $script,
        ],
        'atm',
      ];
    }
  }
}

/**
 * Preprocess for config-page.html.twig.
 */
function atm_admin_config_page_preprocess(&$variables) {
  $variables['module_dir'] = drupal_get_path('module', 'atm');
}

/**
 * Implements hook_cron().
 */
function atm_cron() {
  if (REQUEST_TIME - \Drupal::state()->get('google_atm.last_cache') >= 86400) {

    /** @var \Drupal\atm\Helper\AtmApiHelper $helper */
    $helper = \Drupal::service('atm.helper');
    $helper->getAtmHttpClient()->propertyUpdateConfig();

    \Drupal::state()->set('atm.last_cache', REQUEST_TIME);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function atm_preprocess_form_element_label(&$variables) {
  $element = &$variables['element'];
  if ($element['#id'] == 'edit-sticky') {
    $variables['attributes']['class'] = ['onoffswitch-label'];
  }
}

/**
 * Return Atm Helper.
 *
 * @return \Drupal\atm\Helper\AtmApiHelper
 *   Atm Helper.
 */
function atm_get_helper() {
  static $helper;

  if (!$helper) {
    $helper = \Drupal::service('atm.helper');
  }

  return $helper;
}

/**
 * Return Atm Api Client.
 *
 * @return \Drupal\atm\AtmHttpClient
 *   Atm Helper.
 */
function atm_get_api_client() {
  static $apiClient;

  if (!$apiClient) {
    $apiClient = \Drupal::service('atm.http_client');
  }

  return $apiClient;
}
